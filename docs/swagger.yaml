basePath: /
definitions:
  http.createCustomerRequest:
    properties:
      email:
        type: string
      nome:
        type: string
    required:
    - email
    - nome
    type: object
  http.customerResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      nome:
        type: string
    type: object
  http.updateCustomerRequest:
    properties:
      email:
        type: string
      nome:
        type: string
    required:
    - email
    - nome
    type: object
host: localhost:5002
info:
  contact: {}
  description: Service to manage MCA Bank customers (CRUD operations).
  title: MCA Bank Customer API
  version: "1.0"
paths:
  /customers:
    get:
      description: Retrieve a list of all customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/http.customerResponse'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all customers
      tags:
      - customers
    post:
      consumes:
      - application/json
      description: Create a customer with a name and email
      parameters:
      - description: Customer info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.createCustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.customerResponse'
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Create a new customer
      tags:
      - customers
  /customers/{id}:
    delete:
      description: Delete a customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Customer deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Delete a customer
      tags:
      - customers
    get:
      description: Retrieve a single customer by its ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.customerResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
      summary: Get a customer by ID
      tags:
      - customers
    put:
      consumes:
      - application/json
      description: Update a customer's name and email by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated customer info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/http.updateCustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.customerResponse'
        "400":
          description: Bad Request
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Update an existing customer
      tags:
      - customers
schemes:
- http
swagger: "2.0"
